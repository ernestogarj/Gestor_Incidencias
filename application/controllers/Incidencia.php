<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Incidencia extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Incidencia_model');
        //Sesiones
        if(!$this->session->userdata('logged_in')){
           redirect('login', 'refresh'); 
        }
    } 

    /*
     * Listado de mis incidencias reportadas al sistema que estan en proceso
     */
    function index()
    {
        //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];
        $data['id'] = $session_data['id'];

        //SQL
        $data['incidencias'] = $this->Incidencia_model->get_my_incidencias($data['id']);

        //Carga de vistas
        $this->load->view('base/header',$data);
        $this->load->view('incidencia/index',$data);
    }


    //Listado de incidencias para asignar a los tenicos
     function sin_asignar()
    {
        //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];

        //SQL
        $data['incidencias'] = $this->Incidencia_model->get_sin_asignar();
        $data['tecnicos'] = $this->Incidencia_model->get_tecnicos();
        $data['numero_incidencias_tecnico'] = $this->Incidencia_model->get_numero_incidencia_tecnico();

        //Carga de vistas
        $this->load->view('base/header',$data);
        $this->load->view('incidencia/sin_asignar',$data);
    }


      //Listado de las incidencias que le han sido asignadas a un tecnico en concreto
      function tecnico_incidencias_asignadas()
    {
        //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];
        $data['id'] = $session_data['id'];

        //SQL
        $data['incidencias'] = $this->Incidencia_model->get_incidencia_tecnico($data['id']);
       

        //Carga de vistas
        $this->load->view('base/header',$data);
        $this->load->view('incidencia/tecnico_incidencias_asignadas',$data);
    }


    //Listado con resumen de todas la incidencias que hay asignadas y a que tecnicos estan asignadas 
    function incidencias_asignadas(){
         //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];

        //Control de permisos
        if ($data['permiso'] != 'Admin') {
            redirect('incidencia/index');
        }

        //Get todas las incidencias asignadas
        $data['incidencias'] = $this->Incidencia_model->get_incidencias_asignadas();
        //Get Todos los tenicos del sistema a los que se le puede asignar incidencias
        $data['tecnicos'] = $this->Incidencia_model->get_tecnicos();
        //Get Count numero de incidencias de cada tecnico
        $data['numero_incidencias_tecnico'] = $this->Incidencia_model->get_numero_incidencia_tecnico(); 
        $this->load->view('base/header',$data);
        $this->load->view('incidencia/incidencias_asignadas',$data);

    }


    /*
     * Adding a new incidencia
     */
    function add()
    {   
        //Datos sesion
        $session_data = $this->session->userdata('logged_in');
        $data['id'] = $session_data['id'];
        $data['permiso'] = $session_data['rol'];

        //Formulario
        $this->load->library('form_validation');
		$this->form_validation->set_rules('titulo','Titulo','required|max_length[100]');
		$this->form_validation->set_rules('descripcion','Descripcion','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_usuario' => $data['id'],
				'titulo' => $this->input->post('titulo'),
				'descripcion' => $this->input->post('descripcion'),
            );
            
            $incidencia_id = $this->Incidencia_model->add_incidencia($params);
            $this->session->set_flashdata('success_msg_add', '<div class="alert alert-success"><p>Su incidencia ha sido registrada correctamente en el sistema</p></div>');          
            redirect('incidencia/index');
        }
        else
        {
            $this->load->view('base/header',$data);
            $this->load->view('incidencia/add');
        }
    }  

    //Da por resuelta una incidencia
    function incidencia_resuelta($id)
    {   
        //Datos sesion
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];
        $data['id'] = $session_data['id'];
        
        //Comprueba si la incidencia que se va a dar por resuelta esta asignada a ese tenico y no es otro el que se la va a dar por resuelta
        $result_db = $this->Incidencia_model->check_incidencia_tecnico_asignada($id);

        //Control de permisos    
        if ($data['permiso'] != 'Tecnico' && $data['id'] != $result_db) {
            redirect('incidencia','refresh'); 
        }

        // Comprobamos que la incidencia existe antes de darla por resuelta
        $incidencia = $this->Incidencia_model->get_incidencia($id);
        
        if(isset($incidencia['id']))
        {
            $params = array(
                'estado' => 'resuelta',
                );

                $this->Incidencia_model->update_incidencia($id,$params);   
                $this->session->set_flashdata('success_msg_edit', '<div class="alert alert-success"><p>La Incidencia Fue resuelta</p></div>');          

                redirect('incidencia/tecnico_incidencias_asignadas');
            }
        else{
            show_error('La incidencia no existe');
        }
    } 
    /*
     * Editing a incidencia
     */
    function edit($id)
    {   
        //Datos sesion
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];
        $data['id_usuario'] = $session_data['id'];

        //Hace que los usuarios solo editen sus incidencias 
        $id_incidencia = $this->uri->segment(3);
        $result_db = $this->Incidencia_model->check_edit_usuario($id_incidencia);
        
        if ($result_db['id_usuario'] != $data['id_usuario'] && $data['permiso'] == 'usuario') {
            redirect('incidencia','refresh'); 
        }

        // check if the incidencia exists before trying to edit it
        $incidencia = $this->Incidencia_model->get_incidencia($id);
        
        if(isset($incidencia['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('titulo','Titulo','required|max_length[100]');
			$this->form_validation->set_rules('descripcion','Descripcion','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'titulo' => $this->input->post('titulo'),
					'descripcion' => $this->input->post('descripcion'),
                );

                $this->Incidencia_model->update_incidencia($id,$params);   
                $this->session->set_flashdata('success_msg_edit', '<div class="alert alert-success"><p>Los cambios han sido realizados con exito</p></div>');       
                redirect('incidencia/index');
            }
            else
            {   
                $data['incidencia'] = $this->Incidencia_model->get_incidencia($id);
                $this->load->view('base/header',$data);
                $this->load->view('incidencia/edit',$data);
            }
        }
        else
            show_error('La incidencia que esta intentando modificar no existe');
    } 

    /*
     * Deleting incidencia
     */
    function remove($id)
    {
        $incidencia = $this->Incidencia_model->get_incidencia($id);

        // check if the incidencia exists before trying to delete it
        if(isset($incidencia['id']))
        {
            $this->Incidencia_model->delete_incidencia($id);
            $this->session->set_flashdata('success_msg_delete', '<div class="alert alert-success"><p>La Incidencia ha sido borrada correctamente</p></div>');
            redirect('incidencia/sin_asignar');
        }
        else
            show_error('The incidencia you are trying to delete does not exist.');
    }
    
 //Asigna Incidencias   
  function asignar_incidencia(){

        $this->load->library('form_validation');
        $this->form_validation->set_rules('tecnico','tecnico','required');
        $this->form_validation->set_rules('incidencia','incidencia','required');

        if($this->form_validation->run())     
        {   
            $id = $this->input->post('incidencia');
            $params = array(
                'id_tecnico' => $this->input->post('tecnico'),
                'estado' => 'asignada',
                    );
            
              $this->Incidencia_model->asignar_incidencia($id,$params);      
              $this->session->set_flashdata('success_msg_asignar', '<div class="alert alert-success"><p>La Incidencia ha sido asignada correctamente</p></div>');      
            redirect('incidencia/sin_asignar');
        }
        else
        {
            $this->load->view('base/header');
            $this->load->view('incidencia/sin_asignar');
        }

    }
    //Cambia el tecnico que tiene la incidencia asignada
    function reasignar_incidencia(){

        $this->load->library('form_validation');
        $this->form_validation->set_rules('tecnico','tecnico','required');
        $this->form_validation->set_rules('incidencia','incidencia','required');

        if($this->form_validation->run())     
        {   
            $id = $this->input->post('incidencia');
            $params = array(
                'id_tecnico' => $this->input->post('tecnico'),
                        );
            
              $this->Incidencia_model->update_incidencia($id,$params);      
              $this->session->set_flashdata('success_msg_asignar', '<div class="alert alert-success"><p>La Incidencia ha sido Re-asignada correctamente</p></div>');      
            redirect('incidencia/incidencias_asignadas');
        }
        else
        {
            $this->load->view('base/header');
            $this->load->view('incidencia/incidencias_asignadas');
        }

    }


}
