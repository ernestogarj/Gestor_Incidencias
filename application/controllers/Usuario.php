<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
class Usuario extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        //Carga de modelo
        $this->load->model('Usuario_model');
        //Sesiones
        if(!$this->session->userdata('logged_in')){
           redirect('login', 'refresh'); 
        }
        
    } 

    //Listado de usuarios que hay en el sistema
    function index()
    {   
        //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];

        //Comprobacion si se tienen permiso
        if ($data['permiso'] == 'Usuario' || $data['permiso'] == 'Tecnico') {
            redirect('incidencia','refresh');
        }
        
        //SQL
        $data['usuarios'] = $this->Usuario_model->get_all_usuarios();
        

        //Carga de Vistas
        $this->load->view('base/header',$data);
        $this->load->view('usuario/index',$data);
         
    }

    //Carga la configuracion actual de la cuenta de un usuario y permite modifcar su perfil
    function mi_cuenta(){   
        //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $id = $session_data['id'];
        $data['permiso'] = $session_data['rol'];

            $this->load->library('form_validation');

            $this->form_validation->set_rules('nombre','Nombre','required|max_length[50]');
            $this->form_validation->set_rules('apellidos','Apellidos','required|max_length[100]');
            $this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email|callback_check_email_myaccount');
            $this->form_validation->set_rules('depatarmento','Depatarmento','max_length[50]');
        
            if($this->form_validation->run())     
            {   
                $params = array(
                    'nombre' => $this->input->post('nombre'),
                    'apellidos' => $this->input->post('apellidos'),
                    'email' => $this->input->post('email'),
                    'departamento' => $this->input->post('depatarmento'),
                );

                $this->Usuario_model->update_usuario($id,$params);  
                $this->session->set_flashdata('success_msg', '<div class="alert alert-success"><p>Los cambios han sido realizados con exito</p></div>');          
                redirect('usuario/mi_cuenta');
            }
            else
            {   
                $data['usuario'] = $this->Usuario_model->get_usuario($id);
                $this->load->view('base/header',$data);
                $this->load->view('usuario/my_account',$data);
            }
        }
        

    //Añadir un nuevo usuario al sistema
    function add()
    {   
        //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];

        //Comprobacion si se tienen permiso
        if ($data['permiso'] == 'Usuario') {
            redirect('incidencia','refresh');
        }

        $this->load->library('form_validation');

		$this->form_validation->set_rules('nombre','Nombre','required|max_length[50]');
		$this->form_validation->set_rules('apellidos','Apellidos','required|max_length[100]');
		$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email|callback_check_email_edituser');
		$this->form_validation->set_rules('password','Password','required|max_length[100]');
        $this->form_validation->set_rules('repassword','Password','max_length[100]|matches[password]');
		$this->form_validation->set_rules('depatarmento','Depatarmento','required|max_length[50]');
		$this->form_validation->set_rules('rol','Rol','required|max_length[10]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'nombre' => $this->input->post('nombre'),
				'apellidos' => $this->input->post('apellidos'),
				'email' => $this->input->post('email'),
				'password' => md5($this->input->post('repassword')),
				'departamento' => $this->input->post('depatarmento'),
				'rol' => $this->input->post('rol'),
            );
            
            $usuario_id = $this->Usuario_model->add_usuario($params);
            $this->session->set_flashdata('success_msg_add', '<div class="alert alert-success"><p>El usuario ha sido registrado con exito</p></div>');          
            redirect('usuario/index');
        }
        else
        {
            $this->load->view('base/header',$data);
            $this->load->view('usuario/add');
        }
    }  

  
    //Comprueba el email no existe en la base de datos al modificar los datos desde el mi cuenta
    function check_email_myaccount()
    {
        //Get user id from url that we are editing
        $session_data = $this->session->userdata('logged_in');
        $id_usuario = $session_data['id']; 
        //Get the emails of the user to test if is the same that he had
        $usuario = $this->Usuario_model->get_usuario($id_usuario);
        $email = $this->input->post('email');

        //if email are the same old and new
        if ($usuario['email'] == $email) {
                return true;
            }    
       
        else{
                $result = $this->Usuario_model->check_email($email);

                if ($result == 1){
                     $this->form_validation->set_message('check_email_myaccount', 'El email introducido ya existe en la Base de datos introduzca otro');
                     return false;    
                }
                else
                 {
                    return true;  
                 }
  
            }        

    }

    //Comprueba que el email no existe al editar un usuario desde el apartado usuarios como administrador
     function check_email_edituser()
    {
        //Get user id from url that we are editing
        $id_usuario = $this->uri->segment(3); 
        //Get the emails of the user to test if is the same that he had
        $usuario = $this->Usuario_model->get_usuario($id_usuario);
        $email = $this->input->post('email');

        //if email are the same old and new
        if ($usuario['email'] == $email) {
                return true;
            }    
       
        else{
                $result = $this->Usuario_model->check_email($email);

                if ($result == 1){
                     $this->form_validation->set_message('check_email_edituser', 'El email introducido ya existe en la Base de datos introduzca otro');
                     return false;    
                }
                else
                 {
                    return true;  
                 }
  
            }        

    }


    //Editar un usuario del sistema
    function edit($id)
    {   
        //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];

        //Comprobacion si se tienen permiso
        if ($data['permiso'] == 'Usuario' || $data['permiso'] == 'Tecnico') {
            redirect('incidencia','refresh');
        }
        
        // check if the usuario exists before trying to edit it
        $usuario = $this->Usuario_model->get_usuario($id);

        if(isset($usuario['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nombre','Nombre','required|max_length[50]');
			$this->form_validation->set_rules('apellidos','Apellidos','required|max_length[100]');
			$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email|callback_check_email_edituser');
			$this->form_validation->set_rules('depatarmento','Depatarmento','max_length[50]');
			$this->form_validation->set_rules('rol','Rol','required|max_length[10]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'nombre' => $this->input->post('nombre'),
					'apellidos' => $this->input->post('apellidos'),
					'email' => $this->input->post('email'),
					'departamento' => $this->input->post('depatarmento'),
					'rol' => $this->input->post('rol'),
                );

                $this->Usuario_model->update_usuario($id,$params);  
                $this->session->set_flashdata('success_msg_edit', '<div class="alert alert-success"><p>Los Cambios han sido modificados correctamente</p></div>');          
                redirect('usuario/index');
            }
            else
            {   
                $data['usuario'] = $this->Usuario_model->get_usuario($id);
                $this->load->view('base/header',$data);
                $this->load->view('usuario/edit',$data);
            }
        }
        else
            show_error('El usuario que esta intentado modificar no existe');
    } 

    //Cambiar contraeña de un usuario
    function change_password()
    {
        //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];
        $id = $session_data['id'];
    
            $this->load->library('form_validation');

            $this->form_validation->set_rules('password','Password','required|max_length[100]');
            $this->form_validation->set_rules('repassword','Password','max_length[100]|matches[password]');
            
        
            if($this->form_validation->run())     
            {   
                $params = array(
                    'password' => md5($this->input->post('repassword')),
                );

                $this->Usuario_model->update_usuario($id,$params);   
                $this->session->set_flashdata('success_msg_password', '<div class="alert alert-success"><p>La Constraseña ha sido actualizada con exito</p></div>');        
                redirect('usuario/mi_cuenta');
            }
            else
            {   
                $data['usuario'] = $this->Usuario_model->get_usuario($id);
                $this->load->view('base/header',$data);
                $this->load->view('usuario/my_account',$data);
            }
        }
        



    //Eliminar un usuario del sistema
    function remove($id)
    {
         //Sesiones
        $session_data = $this->session->userdata('logged_in');
        $data['permiso'] = $session_data['rol'];

        //Comprobacion si se tienen permiso
        if ($data['permiso'] == 'Usuario') {
            redirect('incidencia','refresh');
        }
        
        $usuario = $this->Usuario_model->get_usuario($id);

        // check if the usuario exists before trying to delete it
        if(isset($usuario['id']))
        {
            $this->Usuario_model->delete_usuario($id);
            $this->session->set_flashdata('success_msg_delete', '<div class="col-md-12 alert alert-success"><p>El usuario fue eliminado correctamente</p></div>');          
            redirect('usuario/index');
        }
        else
            show_error('El usuario que intenta borrar no existe');
    }
    
}

